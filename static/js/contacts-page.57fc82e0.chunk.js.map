{"version":3,"file":"static/js/contacts-page.57fc82e0.chunk.js","mappings":"kUAIaA,EAAWC,EAAAA,GAAAA,KAAH,2UAMC,qBAAGC,MAAkBC,WAG9B,qBAAGD,MAAkBE,kBAcrBC,EAAYJ,EAAAA,GAAAA,MAAH,+IAEL,qBAAGC,MAAkBI,sBAC3B,qBAAGJ,MAAkBK,aAQnBC,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,IAAPR,CAAH,4JAGX,qBAAGC,MAAkBK,aACV,qBAAGL,MAAkBQ,qBACrC,qBAAGR,MAAkBS,yBAId,qBAAGT,MAAkBE,kBAIrBQ,GAAYX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,sBACTa,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,uB,6NChDVe,EAAOf,EAAAA,GAAAA,KAAH,8JAMK,SAAAgB,GAAK,OAAIA,EAAMf,MAAMC,WAG9Be,EAAQjB,EAAAA,GAAAA,MAAH,uKAED,SAAAgB,GAAK,OAAIA,EAAMf,MAAMI,sBAC3B,SAAAW,GAAK,OAAIA,EAAMf,MAAMK,aAQnBM,GAAQZ,EAAAA,EAAAA,IAAOkB,IAAPlB,CAAH,kaAWA,SAAAgB,GAAK,OAAIA,EAAMf,MAAME,kBACjB,SAAAa,GAAK,OAAIA,EAAMf,MAAMC,WACd,SAAAc,GAAK,OAAIA,EAAMf,MAAMkB,mBAC5C,SAAAH,GAAK,OAAIA,EAAMf,MAAMmB,qBACE,SAAAJ,GAAK,OAAIA,EAAMf,MAAMmB,qBAG9B,SAAAJ,GAAK,OAAIA,EAAMf,MAAMoB,uBAK5BP,EAASd,EAAAA,GAAAA,OAAH,+QAMR,SAAAgB,GAAK,OAAIA,EAAMf,MAAMqB,gBACV,SAAAN,GAAK,OAAIA,EAAMf,MAAME,kBACV,SAAAa,GAAK,OAAIA,EAAMf,MAAMkB,mBAChD,SAAAH,GAAK,OAAIA,EAAMf,MAAMmB,qBAGH,SAAAJ,GAAK,OAAIA,EAAMf,MAAMoB,uBAIhCE,GAASvB,EAAAA,EAAAA,IAAOwB,IAAPxB,CAAH,8C,wJC5DNyB,EAAYzB,EAAAA,GAAAA,IAAH,iEAKT0B,GAAuB1B,EAAAA,EAAAA,IAAO2B,EAAAA,GAAP3B,CAAH,wIAIpB,SAAAgB,GAAK,OAAIA,EAAMf,MAAMK,aACV,SAAAU,GAAK,OAAIA,EAAMf,MAAMC,W,oEC+E7C,EAtFoB,SAAC,GAAc,IAAZ0B,EAAW,EAAXA,KACrB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,EAAQN,EAAKO,KAAI,qBAAGL,KAAgBM,iBAE1C,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UAElBC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACd,OAAQb,GACN,IAAK,OACHC,EAAQY,GACR,MACF,IAAK,SACHV,EAAUU,GACV,MACF,QACE,SAIAC,EAAY,mCAAG,WAAMH,GAAN,oEACnBA,EAAEI,kBACEX,EAAMY,SAAShB,EAAKM,eAFL,uBAGjBW,EAAAA,GAAAA,MAAA,UAAejB,EAAf,4BACAkB,IAJiB,+BAOKhB,EAAOiB,QAAQ,UAAW,IAC9BC,OAAS,IARV,uBASjBH,EAAAA,GAAAA,MAAY,+BATK,0BAYnBT,EAAc,CAAER,KAAAA,EAAME,OAAAA,IACtBgB,IACAD,EAAAA,GAAAA,QAAc,qBAdK,4CAAH,sDAiBZC,EAAQ,WACZjB,EAAQ,IACRE,EAAU,KAGZ,OACE,UAAC,KAAD,CAAMkB,SAAUP,EAAhB,WACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CACEQ,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAU,KACVC,UAAQ,EACRb,MAAOb,EACP2B,SAAUjB,QAGd,UAAC,KAAD,qBAEE,SAAC,KAAD,CACEY,KAAK,MACLtB,KAAK,SACL4B,KAAK,qBACLJ,MAAM,+FACNE,UAAQ,EACRb,MAAOX,EACPyB,SAAUjB,QAGd,UAAC,KAAD,CAAQY,KAAK,SAAb,wBAEGb,IAAa,SAAC,KAAD,CAAQoB,KAAM,GAAIC,MAAM,QAAQ,aAAW,mBCpEjE,EAR4B,SAACC,EAAUC,GACnC,IACMC,EADmBD,EAHgBE,OAIT5B,cAChC,OAAOyB,EAASG,QAAO,SAAAC,GAAO,OAC1BA,EAAQnC,KAAKM,cAAcU,SAASiB,O,4CCErC,SAASG,EAAgBC,EAAUC,GACxC,IAIIC,EAASC,OAAOC,OAAO,MAO3B,OANIJ,GAAUK,EAAAA,SAAAA,IAAaL,GAAU,SAAUM,GAC7C,OAAOA,KACNC,SAAQ,SAAUC,GAEnBN,EAAOM,EAAMC,KATF,SAAgBD,GAC3B,OAAOP,IAASS,EAAAA,EAAAA,gBAAeF,GAASP,EAAMO,GAASA,EAQnCG,CAAOH,MAEtBN,EAkET,SAASU,EAAQJ,EAAOK,EAAMhE,GAC5B,OAAsB,MAAfA,EAAMgE,GAAgBhE,EAAMgE,GAAQL,EAAM3D,MAAMgE,GAclD,SAASC,EAAoBC,EAAWC,EAAkBC,GAC/D,IAAIC,EAAmBnB,EAAgBgB,EAAUf,UAC7CA,EA/DC,SAA4BmB,EAAMC,GAIvC,SAASC,EAAeZ,GACtB,OAAOA,KAAOW,EAAOA,EAAKX,GAAOU,EAAKV,GAJxCU,EAAOA,GAAQ,GACfC,EAAOA,GAAQ,GAQf,IAcIE,EAdAC,EAAkBpB,OAAOC,OAAO,MAChCoB,EAAc,GAElB,IAAK,IAAIC,KAAWN,EACdM,KAAWL,EACTI,EAAYzC,SACdwC,EAAgBE,GAAWD,EAC3BA,EAAc,IAGhBA,EAAYE,KAAKD,GAKrB,IAAIE,EAAe,GAEnB,IAAK,IAAIC,KAAWR,EAAM,CACxB,GAAIG,EAAgBK,GAClB,IAAKN,EAAI,EAAGA,EAAIC,EAAgBK,GAAS7C,OAAQuC,IAAK,CACpD,IAAIO,EAAiBN,EAAgBK,GAASN,GAC9CK,EAAaJ,EAAgBK,GAASN,IAAMD,EAAeQ,GAI/DF,EAAaC,GAAWP,EAAeO,GAIzC,IAAKN,EAAI,EAAGA,EAAIE,EAAYzC,OAAQuC,IAClCK,EAAaH,EAAYF,IAAMD,EAAeG,EAAYF,IAG5D,OAAOK,EAoBQG,CAAmBd,EAAkBE,GAmCpD,OAlCAf,OAAO4B,KAAK/B,GAAUO,SAAQ,SAAUE,GACtC,IAAID,EAAQR,EAASS,GACrB,IAAKC,EAAAA,EAAAA,gBAAeF,GAApB,CACA,IAAIwB,EAAWvB,KAAOO,EAClBiB,EAAWxB,KAAOS,EAClBgB,EAAYlB,EAAiBP,GAC7B0B,GAAYzB,EAAAA,EAAAA,gBAAewB,KAAeA,EAAUrF,MAAMuF,IAE1DH,GAAaD,IAAWG,EAQhBF,IAAWD,GAAYG,EAMxBF,GAAWD,IAAWtB,EAAAA,EAAAA,gBAAewB,KAI9ClC,EAASS,IAAO4B,EAAAA,EAAAA,cAAa7B,EAAO,CAClCS,SAAUA,EAASqB,KAAK,KAAM9B,GAC9B4B,GAAIF,EAAUrF,MAAMuF,GACpBG,KAAM3B,EAAQJ,EAAO,OAAQO,GAC7ByB,MAAO5B,EAAQJ,EAAO,QAASO,MAXjCf,EAASS,IAAO4B,EAAAA,EAAAA,cAAa7B,EAAO,CAClC4B,IAAI,IAVNpC,EAASS,IAAO4B,EAAAA,EAAAA,cAAa7B,EAAO,CAClCS,SAAUA,EAASqB,KAAK,KAAM9B,GAC9B4B,IAAI,EACJG,KAAM3B,EAAQJ,EAAO,OAAQO,GAC7ByB,MAAO5B,EAAQJ,EAAO,QAASO,SAoB9Bf,ECjIT,IAAIyC,EAAStC,OAAOsC,QAAU,SAAUC,GACtC,OAAOvC,OAAO4B,KAAKW,GAAK1E,KAAI,SAAU2E,GACpC,OAAOD,EAAIC,OAyBXC,EAA+B,SAAUC,GAG3C,SAASD,EAAgB/F,EAAOiG,GAC9B,IAAIC,EAIAC,GAFJD,EAAQF,EAAiBI,KAAKC,KAAMrG,EAAOiG,IAAYI,MAE9BF,aAAaV,KC5C3B,SAAgCa,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EDuCsCE,CAAuBN,IAUlE,OAPAA,EAAMO,MAAQ,CACZC,aAAc,CACZC,YAAY,GAEdR,aAAcA,EACdS,aAAa,GAERV,GAjBTW,EAAAA,EAAAA,GAAed,EAAiBC,GAoBhC,IAAIc,EAASf,EAAgBgB,UAqE7B,OAnEAD,EAAOE,kBAAoB,WACzBX,KAAKY,SAAU,EACfZ,KAAKa,SAAS,CACZR,aAAc,CACZC,YAAY,MAKlBG,EAAOK,qBAAuB,WAC5Bd,KAAKY,SAAU,GAGjBlB,EAAgBqB,yBAA2B,SAAkClD,EAAWmD,GACtF,IDiBmCrH,EAAOoE,ECjBtCD,EAAmBkD,EAAKlE,SACxBgD,EAAekB,EAAKlB,aAExB,MAAO,CACLhD,SAFgBkE,EAAKT,aDeY5G,ECbckE,EDaPE,ECbkB+B,EDcvDjD,EAAgBlD,EAAMmD,UAAU,SAAUQ,GAC/C,OAAO6B,EAAAA,EAAAA,cAAa7B,EAAO,CACzBS,SAAUA,EAASqB,KAAK,KAAM9B,GAC9B4B,IAAI,EACJ+B,OAAQvD,EAAQJ,EAAO,SAAU3D,GACjC2F,MAAO5B,EAAQJ,EAAO,QAAS3D,GAC/B0F,KAAM3B,EAAQJ,EAAO,OAAQ3D,SCpB6CiE,EAAoBC,EAAWC,EAAkBgC,GAC3HS,aAAa,IAKjBE,EAAOX,aAAe,SAAsBxC,EAAO4D,GACjD,IAAIC,EAAsBtE,EAAgBmD,KAAKrG,MAAMmD,UACjDQ,EAAMC,OAAO4D,IAEb7D,EAAM3D,MAAMoE,UACdT,EAAM3D,MAAMoE,SAASmD,GAGnBlB,KAAKY,SACPZ,KAAKa,UAAS,SAAUT,GACtB,IAAItD,GAAWsE,EAAAA,EAAAA,GAAS,GAAIhB,EAAMtD,UAGlC,cADOA,EAASQ,EAAMC,KACf,CACLT,SAAUA,QAMlB2D,EAAOY,OAAS,WACd,IAAIC,EAActB,KAAKrG,MACnB4H,EAAYD,EAAYE,UACxBC,EAAeH,EAAYG,aAC3B9H,GAAQ+H,EAAAA,EAAAA,GAA8BJ,EAAa,CAAC,YAAa,iBAEjEjB,EAAeL,KAAKI,MAAMC,aAC1BvD,EAAWyC,EAAOS,KAAKI,MAAMtD,UAAUhC,IAAI2G,GAK/C,cAJO9H,EAAMsH,cACNtH,EAAM2F,aACN3F,EAAM0F,KAEK,OAAdkC,EACkBI,EAAAA,cAAoBC,EAAAA,EAAAA,SAAiC,CACvEtG,MAAO+E,GACNvD,GAGe6E,EAAAA,cAAoBC,EAAAA,EAAAA,SAAiC,CACvEtG,MAAO+E,GACOsB,EAAAA,cAAoBJ,EAAW5H,EAAOmD,KAGjD4C,EA1F0B,CA2FjCiC,EAAAA,WAEFjC,EAAgBmC,UAyDZ,GACJnC,EAAgBoC,aA5KG,CACjBN,UAAW,MACXC,aAAc,SAAsBnE,GAClC,OAAOA,IA0KX,I,UAAA,IE1LalD,EAAYzB,EAAAA,GAAAA,IAAH,qkB,wCCAToJ,EAAOpJ,EAAAA,GAAAA,GAAH,oPAKA,SAAAgB,GAAK,OAAIA,EAAMf,MAAMI,sBAC3B,SAAAW,GAAK,OAAIA,EAAMf,MAAMK,aACV,SAAAU,GAAK,OAAIA,EAAMf,MAAMoJ,oBAQ9BC,EAAatJ,EAAAA,GAAAA,IAAH,6F,iDCwBvB,EAlCgB,SAAC,GAA0D,IAAxDuJ,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,iBAAqBC,GAAW,YAChEC,EAAqBL,EAArBK,GAAI9H,EAAiByH,EAAjBzH,KAAME,EAAWuH,EAAXvH,OAEZ6H,GAAUC,EAAAA,EAAAA,QAAO,MACvB,OACE,SAACC,EAAA,GAAD,kBACMJ,GADN,IAEEE,QAASA,EACTG,QAASN,EACTO,WAAW,eAJb,UAME,UAACb,EAAD,CAAMc,IAAKL,EAAX,WACE,SAAC,MAAD,CAAclG,KAAK,OAClB7B,EAFH,KAES,0BAAOE,KACd,UAACsH,EAAD,YACE,SAACxI,EAAA,EAAD,CAAQ0I,QAAS,kBAAMC,EAAOG,IAA9B,mBACA,SAAC9I,EAAA,EAAD,CAAQ0I,QAAS,kBAAMA,EAAQI,IAA/B,8BC2BV,EAvCoB,SAAC,GAAiD,IAA/ChI,EAA8C,EAA9CA,KAAM4H,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,iBACtC5F,GAAYqG,EAAAA,EAAAA,KAAY,SAAA1C,GAAK,OAAIA,EAAM2C,eACvCC,EAAmBC,EAAoB1I,EAAMkC,GAC7CyG,GAAWC,EAAAA,EAAAA,MAEXC,EAAqB,SAAAb,GACzBc,QAAQC,IAAIf,GACZW,GAASK,EAAAA,EAAAA,KAAa,IACtBpB,EAAQI,IAGJiB,EAAkB,SAAAjB,GACtBW,GAASO,EAAAA,EAAAA,KAAmB,IAC5BrB,EAAOG,IAGT,OACE,SAAC,EAAD,WACE,SAAC,EAAD,CAAiBf,UAAU,KAAKkC,UAAU,eAA1C,SACGV,EAAiBlI,KAAI,SAAAoH,GAAI,OACxB,SAAC,EAAD,CAEEA,KAAMA,EACNC,QAAS,SAAAI,GAAE,OAAIa,EAAmBb,IAClCH,OAAQ,SAAAG,GAAE,OAAIiB,EAAgBjB,IAC9BF,iBAAkBA,GAJbH,EAAKK,Y,iDCVhBoB,GAAYC,SAASC,cAAc,eAyGzC,IAvGoBC,EAAAA,EAAAA,aAAW,WAAejB,GAAS,IAArBN,EAAoB,EAApBA,GAAIhI,EAAgB,EAAhBA,KACpC,GAA8BwJ,EAAAA,EAAAA,KAA9B,eAAOC,EAAP,KAAoBhH,EAApB,KACAqG,QAAQC,IAAItG,GACZ,IAAMkG,GAAWC,EAAAA,EAAAA,MACXc,EAAY1B,EAClB,EAAyBhI,EAAK2J,MAAK,qBAAG3B,KAAgB0B,KAA9CxJ,EAAR,EAAQA,KAAME,EAAd,EAAcA,OAEd,GAIIwJ,EAAAA,EAAAA,IAAQ,CAAEC,aAAc,QAH1BC,EADF,EACEA,SACA9I,EAFF,EAEEA,aACa+I,EAHf,EAGEC,UAAaD,OAcf,OAAOE,EAAAA,EAAAA,eACL,SAAC,IAAD,CAAU3B,IAAKA,EAAf,UACE,UAAC,IAAD,YACE,SAACpJ,EAAA,EAAD,CACE0I,QAAS,kBAAMe,GAASO,EAAAA,EAAAA,KAAmB,KAC3CgB,SAAU,WACV5L,SAAS,EACT6L,UAAW,OACXC,UAAW,OALb,UAOE,SAAC,KAAD,OAEF,UAAC,KAAD,CAAU7I,SAAUP,GAvBT,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACAA,EAAOiB,QAAQ,UAAW,IAC9BC,OAAS,GAC3BH,EAAAA,GAAAA,MAAY,gCAIdsI,EADmB,CAAEzB,GAAI0B,EAAWxJ,KAAAA,EAAME,OAAAA,IAE1CuI,GAASO,EAAAA,EAAAA,KAAmB,QAexB,WACE,UAAC,KAAD,mBAEE,SAAC,MAAD,QACEmB,aAAcnK,GACV4J,EAAS,OAAQ,CACnBlI,SAAU,oBACVH,QAAS,cACTE,UAAW,CACTZ,MAAO,GACPuJ,QAAS,qCAIf,SAAC,IAAD,CACEP,OAAQA,EACR7J,KAAK,OACL4G,OAAQ,gBAAGyD,EAAH,EAAGA,SAAH,OACNA,GACA7H,OAAO8H,QAAQD,GAAUhK,KAAI,+BAAEiB,EAAF,KAAQ8I,EAAR,YAC3B,uBAAeA,GAAP9I,aAKhB,UAAC,KAAD,qBAEE,SAAC,MAAD,QACE6I,aAAcjK,EACd0B,KAAK,sBACDgI,EAAS,SAAU,CACrBlI,SAAU,2BAGd,SAAC,IAAD,CACEmI,OAAQA,EACR7J,KAAK,SACL4G,OAAQ,gBAAGyD,EAAH,EAAGA,SAAH,OACNA,GACA7H,OAAO8H,QAAQD,GAAUhK,KAAI,+BAAEiB,EAAF,KAAQ8I,EAAR,YAC3B,uBAAeA,GAAP9I,YAKfuI,EAAOU,kBAAmB,sDAC3B,SAAC,KAAD,CAAYjJ,KAAK,SAAjB,4BAIN4H,O,WC5GS/J,GAAQjB,EAAAA,GAAAA,MAAH,4YACD,SAAAgB,GAAK,OAAIA,EAAMf,MAAMI,sBASzB,SAAAW,GAAK,OAAIA,EAAMf,MAAMK,aACd,SAAAU,GAAK,OAAIA,EAAMf,MAAME,kBACjB,SAAAa,GAAK,OAAIA,EAAMf,MAAMC,WACd,SAAAc,GAAK,OAAIA,EAAMf,MAAMkB,mBAC5C,SAAAH,GAAK,OAAIA,EAAMf,MAAMmB,qBAIP,SAAAJ,GAAK,OAAIA,EAAMf,MAAMoB,uBCC3C,GAjBe,WACb,IAAM2C,GAASmG,EAAAA,EAAAA,KAAY,qBAAGC,YAA8BpG,UACtDuG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACvJ,GAAD,oCAEE,kBACEmC,KAAK,OACLtB,KAAK,SACL2B,SAAU,SAAAhB,GAAC,OAAI8H,GAAS+B,EAAAA,GAAAA,GAAa7J,EAAEC,OAAOC,SAC9CA,MAAOqB,QCLTgH,GAAYC,SAASC,cAAc,eA0CzC,IAxCuBC,EAAAA,EAAAA,aAAW,WAASjB,GAAS,IAAfN,EAAc,EAAdA,GACnC,GAAgC2C,EAAAA,EAAAA,MAAhC,eAAOC,EAAP,KAAsBnI,EAAtB,KACAqG,QAAQC,IAAItG,GACZqG,QAAQC,IAAIf,GACZ,IAAMW,GAAWC,EAAAA,EAAAA,MAEXiC,EAAiB,SAAAC,GACjBA,IACFF,EAAc5C,GACd7G,EAAAA,GAAAA,QAAc,wBAEhBwH,GAASK,EAAAA,EAAAA,KAAa,KASxB,OAAOiB,EAAAA,EAAAA,eACL,SAAC,IAAD,CAAU3B,IAAKA,EAAKV,QAAS,SAAA/G,GAAC,OAPZ,SAAAA,GACdA,EAAEC,SAAWD,EAAEkK,eACjBpC,GAASK,EAAAA,EAAAA,KAAa,IAKUgC,CAAYnK,IAA9C,UACE,UAAC,IAAD,YACE,oEACA,SAAC3B,EAAA,EAAD,CAAQ0I,QAAS,kBAAMiD,GAAe,IAAQI,QAAS,WAAvD,iBAGA,SAAC/L,EAAA,EAAD,CAAQ0I,QAAS,kBAAMiD,GAAe,IAAOI,QAAS,WAAtD,sBAKJ7B,O,WCLJ,GArCoBhL,EAAAA,GAAAA,GAAH,ikBAMK,qBAAGC,MAAkBoJ,oBAUrB,qBAAGpJ,MAAkBQ,qBACnC,qBAAGR,MAAkBS,yBAWP,qBAAGT,MAAkBQ,qBACnC,qBAAGR,MAAkBS,yBCO7B,IA7BiByK,EAAAA,EAAAA,aAAW,SAACnK,EAAOkJ,GAClC,IAAM4C,GAAShD,EAAAA,EAAAA,QAAO,CAACiD,EAAAA,GAAOC,EAAAA,GAAMC,EAAAA,KAE9B1C,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,GAAD,CAAMN,IAAKA,EAAX,SACG4C,EAAOI,QAAQ/K,KAAI,SAAAlC,GAAK,OACvB,yBACE,SAACa,EAAA,EAAD,CAEE0I,QAAS,YAXO,SAAC,GAAe,IAAbvJ,EAAY,EAAZA,MAC3BsK,GAAS4C,EAAAA,GAAAA,GAAYlN,IACrBsK,GAAS6C,EAAAA,EAAAA,KAAgB,IAUfC,CAAkB,CAAEpN,MAAAA,KAEtB4M,QAAQ,WALV,SAOG5M,EAAM6B,MANF7B,EAAM6B,OAFN7B,EAAM6B,c,WCgGvB,GAnGqB,WACnB,IAAIwL,GAAYxD,EAAAA,EAAAA,QAAO,MACjBJ,GAAmBI,EAAAA,EAAAA,QAAOyD,SAASR,EAAAA,GAAAA,oBACnCS,GAAW1D,EAAAA,EAAAA,QAAO,MAClB2D,GAAc3D,EAAAA,EAAAA,QAAO,MAErB4D,GAAiBvD,EAAAA,EAAAA,KACrB,qBAAGC,YAA8BuD,OAAOC,YAEpCC,GAAc1D,EAAAA,EAAAA,KAClB,qBAAGC,YAA8BuD,OAAOG,aAEpCC,GAAoB5D,EAAAA,EAAAA,KACxB,qBAAGC,YAA8BuD,OAAOK,eAGpCzD,GAAWC,EAAAA,EAAAA,MAEjB,GAKIyD,EAAAA,EAAAA,IAAoB,CACtBC,gBAAiB,IACjBC,2BAA2B,IAP7B,IACEvM,KAAAA,OADF,MACS,GADT,EAEEW,EAFF,EAEEA,UACA6L,EAHF,EAGEA,UACAC,EAJF,EAIEA,MAMEA,GACFtL,EAAAA,GAAAA,MAAA,UAAesL,EAAMzM,KAAKsK,UAU5B,OADAxB,QAAQC,IAAI/I,IAEV,UAACH,EAAD,CAAW+H,QARY,SAAA/G,GACnBA,EAAEC,SAAWD,EAAEkK,eACjBpC,GAAS6C,EAAAA,EAAAA,KAAgB,KAM3B,WACE,SAACtM,EAAA,EAAD,CACE0I,QAAS,kBAAMe,GAAS6C,EAAAA,EAAAA,KAAgB,KACxCP,QAAS,WACTf,SAAU,WACVE,UAAW,OACXD,UAAW,OALb,2BASA,SAAChC,EAAA,EAAD,CACEF,QAAS4D,EACTlH,GAAImH,EACJ1D,QAASN,EAAiBwD,QAC1BjD,WAAW,OACXqE,eAAa,EALf,UAOE,SAAC,GAAD,CAAUpE,IAAKuD,OAEjB,uCACA,SAAC,EAAD,CAAa7L,KAAMA,KACnB,sCACA,SAAC,GAAD,IACCW,IAAa,SAACgM,GAAA,EAAD,KACd,SAACxE,EAAA,EAAD,CACExD,GAAI3E,EAAKsB,OAAS,GAAKkL,EACvBpE,QAASN,EAAiBwD,QAC1BoB,eAAa,EAHf,UAKE,SAAC,EAAD,CACE1M,KAAMA,EACN4H,QAAS,SAAA7G,GAAK,OAAK2K,EAAUJ,QAAUvK,GACvC8G,OAAQ,SAAA9G,GAAK,OAAK2K,EAAUJ,QAAUvK,GACtC+G,iBAAkBA,EAAiBwD,aAGvC,SAACnD,EAAA,EAAD,CACEF,QAAS2D,EACTjH,GAAIsH,EACJ7D,QAASN,EAAiBwD,QAC1BjD,WAAW,OACXqE,eAAa,EALf,UAOE,SAAC,GAAD,CAAgB1E,GAAI0D,EAAUJ,QAAShD,IAAKsD,OAE9C,SAACzD,EAAA,EAAD,CACEF,QAAS2D,EACTjH,GAAIwH,EACJ/D,QAASN,EAAiBwD,QAC1BjD,WAAW,OACXqE,eAAa,EALf,UAOE,SAAC,GAAD,CAAa1E,GAAI0D,EAAUJ,QAAStL,KAAMA,EAAMsI,IAAKsD,OAEvD,SAAC9L,EAAD,CAAsB8M,UAAW","sources":["components/ContactEdit/ContactEdit.styled.jsx","components/ContactForm/ContactForm.styled.jsx","pages/ContactsPage/ContactsPage.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactEdit/ContactEdit.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/AgreementModal/AgreementModal.jsx","components/DropList/DropList.styled.jsx","components/DropList/DropList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Input, Button } from '../ContactForm/ContactForm.styled';\nimport { IoMdClose } from 'react-icons/io';\n\nexport const InfoForm = styled.form`\n  min-width: 350px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.bgColor};\n\n  & p {\n    color: ${({ theme }) => theme.bgElementColor};\n    font-size: 12px;\n  }\n\n  & p::before {\n    display: inline;\n    content: '⚠  ';\n  }\n\n  & > button {\n    margin-top: 20px;\n  }\n`;\n\nexport const InfoLabel = styled.label`\n  display: block;\n  font-weight: ${({ theme }) => theme.mainTextFontWeight};\n  color: ${({ theme }) => theme.textColor};\n  text-align: center;\n\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nexport const CloseIcon = styled(IoMdClose)`\n  width: 24px;\n  height: 24px;\n  color: ${({ theme }) => theme.textColor};\n  transition: color ${({ theme }) => theme.animationDuration}\n    ${({ theme }) => theme.animationTimeFunction};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.bgElementColor};\n  }\n`;\n\nexport const InfoInput = styled(Input)``;\nexport const InfoButton = styled(Button)``;\n","import styled from 'styled-components';\nimport InputMask from 'comigo-tech-react-input-mask';\nimport RingLoader from 'react-spinners/RingLoader';\n\nexport const Form = styled.form`\n  max-width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n  padding: 20px;\n  background-color: ${props => props.theme.bgColor};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: ${props => props.theme.mainTextFontWeight};\n  color: ${props => props.theme.textColor};\n  text-align: center;\n  & + & {\n    margin-top: 10px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Input = styled(InputMask)`\n  display: block;\n  margin-top: 5px;\n  width: 100%;\n  height: 30px;\n  padding: 5px;\n  font-size: 15px;\n  font-weight: 500;\n  border: solid 1px;\n  border-radius: 5px;\n  color: #a7a3a3a9;\n  border-color: ${props => props.theme.bgElementColor};\n  background-color: ${props => props.theme.bgColor};\n  transition: border-color ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n  transition: color 1000ms ${props => props.theme.hoverTimeFunction};\n  &:hover,\n  &:focus {\n    border-color: ${props => props.theme.bgElementHoverColor};\n    color: inherit;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  padding: 10px;\n  margin-right: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  color: ${props => props.theme.elementColor};\n  background-color: ${props => props.theme.bgElementColor};\n  transition: background-color ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.bgElementHoverColor};\n  }\n`;\n\nexport const Loader = styled(RingLoader)`\n  margin-left: 5px;\n`;\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 20px;\n`;\n\nexport const StyledToastContainer = styled(ToastContainer)`\n  &&&.Toastify__toast-container {\n  }\n  .Toastify__toast {\n    color: ${props => props.theme.textColor};\n    background-color: ${props => props.theme.bgColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useAddContactMutation } from 'redux/contacts/contacts-slice';\nimport { toast } from 'react-toastify';\nimport { Form, Label, Button, Input, Loader } from './ContactForm.styled';\n\nconst ContactForm = ({ data }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const names = data.map(({ name }) => name.toLowerCase());\n\n  const [createContact, { isLoading }] = useAddContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (names.includes(name.toLowerCase())) {\n      toast.error(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    const formattedNumber = number.replace(/[^0-9]/g, '');\n    if (formattedNumber.length < 12) {\n      toast.error('Enter full telephone number');\n      return;\n    }\n    createContact({ name, number });\n    reset();\n    toast.success('Contact was added');\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          maxLength=\"30\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          mask=\"+ 999-99-99-99-999\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">\n        Add contact\n        {isLoading && <Loader size={20} color=\"white\" aria-label=\"loading\" />}\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactForm;\n","const getFilter = rootReducer => rootReducer.filter;\n\nconst getFilteredContacts = (contacts, rootState) => {\n    const filter = getFilter(rootState);\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n    );\n};\n\nexport default getFilteredContacts;","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  .contactsList {\n    max-width: 500px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  .contact-item-enter {\n    transform: translateX(-200px);\n    opacity: 0;\n  }\n\n  .contact-item-enter-active {\n    transform: translateX(0px);\n    opacity: 1;\n    transition: all 300ms linear;\n  }\n\n  .contact-item-exit {\n    transform: translateX(0px);\n    opacity: 1;\n  }\n\n  .contact-item-exit-active {\n    transform: translateX(-200px);\n    opacity: 0;\n    transition: all 300ms linear;\n  }\n\n  & li + li {\n    margin-top: 10px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px 10px;\n  font-weight: ${props => props.theme.mainTextFontWeight};\n  color: ${props => props.theme.textColor};\n  background-color: ${props => props.theme.listItemBcgColor};\n  border-radius: 5px;\n\n  & img {\n    width: 48px;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  width: 90px;\n  display: flex;\n  justify-content: space-between;\n`;\n","import { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { BiUserCircle } from 'react-icons/bi';\nimport Button from 'components/Button';\nimport { Item, ButtonWrap } from './Contact.styled';\n\nconst Contact = ({ item, onClick, onInfo, animationTimeOut, ...rest }) => {\n  const { id, name, number } = item;\n\n  const nodeRef = useRef(null);\n  return (\n    <CSSTransition\n      {...rest}\n      nodeRef={nodeRef}\n      timeout={animationTimeOut}\n      classNames=\"contact-item\"\n    >\n      <Item ref={nodeRef}>\n        <BiUserCircle size=\"48\" />\n        {name}:<span>{number}</span>\n        <ButtonWrap>\n          <Button onClick={() => onInfo(id)}>Edit</Button>\n          <Button onClick={() => onClick(id)}>Delete</Button>\n        </ButtonWrap>\n      </Item>\n    </CSSTransition>\n  );\n};\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onClick: PropTypes.func.isRequired,\n  onInfo: PropTypes.func.isRequired,\n  animationTimeOut: PropTypes.number.isRequired,\n};\n\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport getFilteredContacts from 'redux/contacts/contacts-selectors';\nimport { TransitionGroup } from 'react-transition-group';\nimport {\n  setModalOpen,\n  setContactInfoOpen,\n} from '../../redux/isOpen/isOpen-actions';\nimport { Container } from './ContactList.styled';\nimport Contact from 'components/Contact';\n\nconst ContactList = ({ data, onClick, onInfo, animationTimeOut }) => {\n  const rootState = useSelector(state => state.rootReducer);\n  const filteredContacts = getFilteredContacts(data, rootState);\n  const dispatch = useDispatch();\n\n  const openModalAgreement = id => {\n    console.log(id);\n    dispatch(setModalOpen(true));\n    onClick(id);\n  };\n\n  const openContactInfo = id => {\n    dispatch(setContactInfoOpen(true));\n    onInfo(id);\n  };\n\n  return (\n    <Container>\n      <TransitionGroup component=\"ul\" className=\"contactsList\">\n        {filteredContacts.map(item => (\n          <Contact\n            key={item.id}\n            item={item}\n            onClick={id => openModalAgreement(id)}\n            onInfo={id => openContactInfo(id)}\n            animationTimeOut={animationTimeOut}\n          />\n        ))}\n      </TransitionGroup>\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  data: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n  animationTimeOut: PropTypes.number.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEditContactMutation } from 'redux/contacts/contacts-slice';\nimport { toast } from 'react-toastify';\nimport { forwardRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { setContactInfoOpen } from 'redux/isOpen/isOpen-actions';\nimport {\n  Backdrop,\n  Modal,\n} from 'components/AgreementModal/AgreementModal.styled';\nimport {\n  InfoForm,\n  InfoInput,\n  InfoButton,\n  InfoLabel,\n  CloseIcon,\n} from './ContactEdit.styled';\nimport Button from 'components/Button';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ContactInfo = forwardRef(({ id, data }, ref) => {\n  const [editContact, result] = useEditContactMutation();\n  console.log(result);\n  const dispatch = useDispatch();\n  const contactID = id;\n  const { name, number } = data.find(({ id }) => id === contactID);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ criteriaMode: 'all' });\n\n  const onSubmit = ({ name, number }) => {\n    const formattedNumber = number.replace(/[^0-9]/g, '');\n    if (formattedNumber.length < 12) {\n      toast.error('Enter full telephone number');\n      return;\n    }\n    const patchtData = { id: contactID, name, number };\n    editContact(patchtData);\n    dispatch(setContactInfoOpen(false));\n  };\n\n  return createPortal(\n    <Backdrop ref={ref}>\n      <Modal>\n        <Button\n          onClick={() => dispatch(setContactInfoOpen(false))}\n          position={'absolute'}\n          bgColor={false}\n          positionX={'10px'}\n          positionY={'10px'}\n        >\n          <CloseIcon />\n        </Button>\n        <InfoForm onSubmit={handleSubmit(onSubmit)}>\n          <InfoLabel>\n            Name\n            <InfoInput\n              defaultValue={name}\n              {...register('name', {\n                required: 'Name is required.',\n                pattern: /[A-Za-z]{3}/,\n                maxLength: {\n                  value: 30,\n                  message: 'This input exceed maxLength.',\n                },\n              })}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"name\"\n              render={({ messages }) =>\n                messages &&\n                Object.entries(messages).map(([type, message]) => (\n                  <p key={type}>{message}</p>\n                ))\n              }\n            />\n          </InfoLabel>\n          <InfoLabel>\n            Number\n            <InfoInput\n              defaultValue={number}\n              mask=\"+ 999-99-99-99-999\"\n              {...register('number', {\n                required: 'Number is required.',\n              })}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"number\"\n              render={({ messages }) =>\n                messages &&\n                Object.entries(messages).map(([type, message]) => (\n                  <p key={type}>{message}</p>\n                ))\n              }\n            />\n          </InfoLabel>\n          {errors.exampleRequired && <span>This field is required</span>}\n          <InfoButton type=\"submit\">Submit</InfoButton>\n        </InfoForm>\n      </Modal>\n    </Backdrop>,\n    modalRoot\n  );\n});\n\nContactInfo.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        .isRequired,\n      homePhone: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      company: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactInfo;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-weight: ${props => props.theme.mainTextFontWeight};\n  & > input {\n    margin-left: 10px;\n    margin-bottom: 20px;\n    width: 200px;\n    height: 30px;\n    padding: 5px;\n    font-size: 15px;\n    font-weight: 500;\n    color: ${props => props.theme.textColor};\n    border-color: ${props => props.theme.bgElementColor};\n    background-color: ${props => props.theme.bgColor};\n    transition: border-color ${props => props.theme.hoverTransition}\n      ${props => props.theme.hoverTimeFunction};\n\n    &:hover,\n    &:focus {\n      border-color: ${props => props.theme.bgElementHoverColor};\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { Label } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(({ rootReducer }) => rootReducer.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        value={filter}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { useDeleteContactMutation } from 'redux/contacts/contacts-slice';\nimport { toast } from 'react-toastify';\nimport { setModalOpen } from '../../redux/isOpen/isOpen-actions';\nimport { Modal, Backdrop } from './AgreementModal.styled';\nimport Button from 'components/Button';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst AgreementModal = forwardRef(({ id }, ref) => {\n  const [deleteContact, result] = useDeleteContactMutation();\n  console.log(result);\n  console.log(id);\n  const dispatch = useDispatch();\n\n  const checkAgreement = answear => {\n    if (answear) {\n      deleteContact(id);\n      toast.success('Contact was deleted');\n    }\n    dispatch(setModalOpen(false));\n  };\n\n  const handleClose = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(setModalOpen(false));\n    }\n  };\n\n  return createPortal(\n    <Backdrop ref={ref} onClick={e => handleClose(e)}>\n      <Modal>\n        <p>Do you really want delete this contact?</p>\n        <Button onClick={() => checkAgreement(false)} padding={'5px 15px'}>\n          No\n        </Button>\n        <Button onClick={() => checkAgreement(true)} padding={'5px 15px'}>\n          Yes\n        </Button>\n      </Modal>\n    </Backdrop>,\n    modalRoot\n  );\n});\n\nAgreementModal.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default AgreementModal;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  position: absolute;\n  top: 55px;\n  right: 30px;\n  width: 150px;\n  padding: 10px;\n  background-color: ${({ theme }) => theme.listItemBcgColor};\n\n  &.drop-enter {\n    opacity: 0;\n    transform: translateY(-100px);\n  }\n\n  &.drop-enter-active {\n    transform: translateY(0px);\n    opacity: 1;\n    transition: all ${({ theme }) => theme.animationDuration}\n      ${({ theme }) => theme.animationTimeFunction};\n  }\n\n  &.drop-exit {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n\n  &.drop-exit-active {\n    opacity: 0;\n    transform: translateY(-100px);\n    transition: all ${({ theme }) => theme.animationDuration}\n      ${({ theme }) => theme.animationTimeFunction};\n  }\n\n  & > li + li {\n    margin-top: 10px;\n  }\n`;\n\nexport default List;\n","import { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { forwardRef } from 'react';\nimport changeTheme from 'redux/theme/theme-actions';\nimport { setDropListOpen } from 'redux/isOpen/isOpen-actions';\nimport { light, dark, blue } from '../../themes';\nimport List from './DropList.styled';\nimport Button from 'components/Button';\n\nconst DropList = forwardRef((props, ref) => {\n  const themes = useRef([light, dark, blue]);\n\n  const dispatch = useDispatch();\n\n  const handleChangeTheme = ({ theme }) => {\n    dispatch(changeTheme(theme));\n    dispatch(setDropListOpen(false));\n  };\n\n  return (\n    <List ref={ref}>\n      {themes.current.map(theme => (\n        <li key={theme.name}>\n          <Button\n            key={theme.name}\n            onClick={() => {\n              handleChangeTheme({ theme });\n            }}\n            padding=\"5px 10px\"\n          >\n            {theme.name}\n          </Button>\n        </li>\n      ))}\n    </List>\n  );\n});\n\nexport default DropList;\n","import { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { setDropListOpen } from '../../redux/isOpen/isOpen-actions';\nimport { useGetContactsQuery } from '../../redux/contacts/contacts-slice';\nimport { Container, StyledToastContainer } from './ContactsPage.styled';\nimport { light } from '../../themes';\n//components imports\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport ContactInfo from '../../components/ContactEdit';\nimport Filter from '../../components/Filter';\nimport AgreementModal from '../../components/AgreementModal';\nimport DropList from '../../components/DropList';\nimport Button from '../../components/Button';\nimport NoteLoader from '../../components/NoteLoader';\n\nconst ContactsPage = () => {\n  let contactId = useRef(null);\n  const animationTimeOut = useRef(parseInt(light.animationDuration));\n  const modalRef = useRef(null);\n  const dropListRef = useRef(null);\n\n  const isDropListOpen = useSelector(\n    ({ rootReducer }) => rootReducer.isOpen.dropList\n  );\n  const isModalOpen = useSelector(\n    ({ rootReducer }) => rootReducer.isOpen.agreement\n  );\n  const isContactInfoOpen = useSelector(\n    ({ rootReducer }) => rootReducer.isOpen.contactInfo\n  );\n\n  const dispatch = useDispatch();\n\n  const {\n    data = [],\n    isLoading,\n    isSuccess,\n    error,\n  } = useGetContactsQuery({\n    pollingInterval: 3000,\n    refetchOnMountOrArgChange: true,\n  });\n\n  if (error) {\n    toast.error(`${error.data.message}`);\n  }\n\n  const handleClickClose = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(setDropListOpen(false));\n    }\n  };\n\n  console.log(data);\n  return (\n    <Container onClick={handleClickClose}>\n      <Button\n        onClick={() => dispatch(setDropListOpen(true))}\n        padding={'5px 32px'}\n        position={'absolute'}\n        positionY={'30px'}\n        positionX={'30px'}\n      >\n        Choose theme\n      </Button>\n      <CSSTransition\n        nodeRef={dropListRef}\n        in={isDropListOpen}\n        timeout={animationTimeOut.current}\n        classNames=\"drop\"\n        unmountOnExit\n      >\n        <DropList ref={dropListRef}></DropList>\n      </CSSTransition>\n      <h1>Phonebook</h1>\n      <ContactForm data={data} />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <NoteLoader />}\n      <CSSTransition\n        in={data.length > 0 && isSuccess}\n        timeout={animationTimeOut.current}\n        unmountOnExit\n      >\n        <ContactList\n          data={data}\n          onClick={value => (contactId.current = value)}\n          onInfo={value => (contactId.current = value)}\n          animationTimeOut={animationTimeOut.current}\n        />\n      </CSSTransition>\n      <CSSTransition\n        nodeRef={modalRef}\n        in={isModalOpen}\n        timeout={animationTimeOut.current}\n        classNames=\"fade\"\n        unmountOnExit\n      >\n        <AgreementModal id={contactId.current} ref={modalRef}></AgreementModal>\n      </CSSTransition>\n      <CSSTransition\n        nodeRef={modalRef}\n        in={isContactInfoOpen}\n        timeout={animationTimeOut.current}\n        classNames=\"fade\"\n        unmountOnExit\n      >\n        <ContactInfo id={contactId.current} data={data} ref={modalRef} />\n      </CSSTransition>\n      <StyledToastContainer autoClose={3000} />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["InfoForm","styled","theme","bgColor","bgElementColor","InfoLabel","mainTextFontWeight","textColor","CloseIcon","IoMdClose","animationDuration","animationTimeFunction","InfoInput","Input","InfoButton","Button","Form","props","Label","InputMask","hoverTransition","hoverTimeFunction","bgElementHoverColor","elementColor","Loader","RingLoader","Container","StyledToastContainer","ToastContainer","data","useState","name","setName","number","setNumber","names","map","toLowerCase","useAddContactMutation","createContact","isLoading","handleChange","e","target","value","handleSubmit","preventDefault","includes","toast","reset","replace","length","onSubmit","type","pattern","title","maxLength","required","onChange","mask","size","color","contacts","rootState","normalizedFilter","filter","contact","getChildMapping","children","mapFn","result","Object","create","Children","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","TransitionGroupContext","propTypes","defaultProps","Item","listItemBcgColor","ButtonWrap","item","onClick","onInfo","animationTimeOut","rest","id","nodeRef","useRef","CSSTransition","timeout","classNames","ref","useSelector","rootReducer","filteredContacts","getFilteredContacts","dispatch","useDispatch","openModalAgreement","console","log","setModalOpen","openContactInfo","setContactInfoOpen","className","modalRoot","document","querySelector","forwardRef","useEditContactMutation","editContact","contactID","find","useForm","criteriaMode","register","errors","formState","createPortal","position","positionX","positionY","defaultValue","message","messages","entries","exampleRequired","changeFilter","useDeleteContactMutation","deleteContact","checkAgreement","answear","currentTarget","handleClose","padding","themes","light","dark","blue","current","changeTheme","setDropListOpen","handleChangeTheme","contactId","parseInt","modalRef","dropListRef","isDropListOpen","isOpen","dropList","isModalOpen","agreement","isContactInfoOpen","contactInfo","useGetContactsQuery","pollingInterval","refetchOnMountOrArgChange","isSuccess","error","unmountOnExit","NoteLoader","autoClose"],"sourceRoot":""}