{"version":3,"file":"static/js/login-page.77f3cfd1.chunk.js","mappings":"iUAIaA,EAAWC,EAAAA,GAAAA,KAAH,2UAMC,qBAAGC,MAAkBC,WAG9B,qBAAGD,MAAkBE,kBAcrBC,EAAYJ,EAAAA,GAAAA,MAAH,+IAEL,qBAAGC,MAAkBI,sBAC3B,qBAAGJ,MAAkBK,aAQnBC,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,IAAPR,CAAH,4JAGX,qBAAGC,MAAkBK,aACV,qBAAGL,MAAkBQ,qBACrC,qBAAGR,MAAkBS,yBAId,qBAAGT,MAAkBE,kBAIrBQ,GAAYX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,sBACTa,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,uB,6NChDVe,EAAOf,EAAAA,GAAAA,KAAH,8JAMK,SAAAgB,GAAK,OAAIA,EAAMf,MAAMC,WAG9Be,EAAQjB,EAAAA,GAAAA,MAAH,uKAED,SAAAgB,GAAK,OAAIA,EAAMf,MAAMI,sBAC3B,SAAAW,GAAK,OAAIA,EAAMf,MAAMK,aAQnBM,GAAQZ,EAAAA,EAAAA,IAAOkB,IAAPlB,CAAH,kaAWA,SAAAgB,GAAK,OAAIA,EAAMf,MAAME,kBACjB,SAAAa,GAAK,OAAIA,EAAMf,MAAMC,WACd,SAAAc,GAAK,OAAIA,EAAMf,MAAMkB,mBAC5C,SAAAH,GAAK,OAAIA,EAAMf,MAAMmB,qBACE,SAAAJ,GAAK,OAAIA,EAAMf,MAAMmB,qBAG9B,SAAAJ,GAAK,OAAIA,EAAMf,MAAMoB,uBAK5BP,EAASd,EAAAA,GAAAA,OAAH,+QAMR,SAAAgB,GAAK,OAAIA,EAAMf,MAAMqB,gBACV,SAAAN,GAAK,OAAIA,EAAMf,MAAME,kBACV,SAAAa,GAAK,OAAIA,EAAMf,MAAMkB,mBAChD,SAAAH,GAAK,OAAIA,EAAMf,MAAMmB,qBAGH,SAAAJ,GAAK,OAAIA,EAAMf,MAAMoB,uBAIhCE,GAASvB,EAAAA,EAAAA,IAAOwB,IAAPxB,CAAH,8C,wMCvDNyB,EAAOzB,EAAAA,GAAAA,IAAH,4CAIJ0B,EAAQ1B,EAAAA,GAAAA,GAAH,kGAML2B,EAAY3B,EAAAA,GAAAA,IAAH,6DAKTe,GAAOf,EAAAA,EAAAA,IAAOD,EAAAA,GAAPC,CAAH,4JAGK,qBAAGC,MAAkBE,kBAQ9ByB,GAAY5B,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sBAET6B,GAAY7B,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,6CAIT8B,GAAa9B,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,6C,6BC2EvB,EAhGkB,WAChB,OAAsC+B,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,YAAoBC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,KACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAY,qBAAGC,KAAgBC,KAAKC,SACtD,GAIIC,EAAAA,EAAAA,IAAQ,CAAEC,aAAc,QAH1BC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAkBf,OAVAE,EAAAA,EAAAA,YAAU,WACO,cAAXjB,IACFE,GAASgB,EAAAA,EAAAA,GAAejB,IACxBC,GAASiB,EAAAA,EAAAA,IAAY,IACrBC,QAAQC,IAAIpB,GACZqB,EAAAA,GAAAA,QAAc,wBACdlB,EAAS,YAAa,CAAEmB,SAAS,OAElC,CAACtB,EAAMC,EAAUE,EAAUJ,KAG5B,UAACR,EAAD,YACE,SAACC,EAAD,0BACA,SAACC,EAAD,WACE,UAACZ,EAAD,CAAM0C,SAAUV,GAnBL,SAAAW,GACf,IAAMC,GAAS,UAAQD,GACvB1B,EAAU2B,MAiBN,WACE,UAAC/B,EAAD,oBAEE,SAACC,GAAD,QACE+B,aAAcrB,GACVO,EAAS,QAAS,CACpBe,SAAU,qBACVC,QAAS,mCACTC,UAAW,CACTC,MAAO,GACPC,QAAS,qCAIf,SAAC,IAAD,CACEjB,OAAQA,EACRkB,KAAK,QACLC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNA,GACAC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,uBAAeA,GAAPO,aAKhB,UAAC5C,EAAD,uBAEE,SAACC,GAAD,QACE2C,KAAK,YACD1B,EAAS,WAAY,CACvBe,SAAU,wBACVC,QAAS,CACPE,MACE,yDACFC,QACE,sEAEJF,UAAW,CACTC,MAAO,GACPC,QAAS,gCAEXQ,UAAW,CACTT,MAAO,EACPC,QAAS,qCAIf,SAAC,IAAD,CACEjB,OAAQA,EACRkB,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNA,GACAC,OAAOC,QAAQF,GAAUG,KAAI,+BAAEC,EAAF,KAAQP,EAAR,YAC3B,uBAAeA,GAAPO,YAKfxB,EAAO0B,kBAAmB,sDAC3B,SAAC5C,EAAD,CAAY0C,KAAK,SAAjB","sources":["components/ContactEdit/ContactEdit.styled.jsx","components/ContactForm/ContactForm.styled.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Input, Button } from '../ContactForm/ContactForm.styled';\nimport { IoMdClose } from 'react-icons/io';\n\nexport const InfoForm = styled.form`\n  min-width: 350px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.bgColor};\n\n  & p {\n    color: ${({ theme }) => theme.bgElementColor};\n    font-size: 12px;\n  }\n\n  & p::before {\n    display: inline;\n    content: 'âš   ';\n  }\n\n  & > button {\n    margin-top: 20px;\n  }\n`;\n\nexport const InfoLabel = styled.label`\n  display: block;\n  font-weight: ${({ theme }) => theme.mainTextFontWeight};\n  color: ${({ theme }) => theme.textColor};\n  text-align: center;\n\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nexport const CloseIcon = styled(IoMdClose)`\n  width: 24px;\n  height: 24px;\n  color: ${({ theme }) => theme.textColor};\n  transition: color ${({ theme }) => theme.animationDuration}\n    ${({ theme }) => theme.animationTimeFunction};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.bgElementColor};\n  }\n`;\n\nexport const InfoInput = styled(Input)``;\nexport const InfoButton = styled(Button)``;\n","import styled from 'styled-components';\nimport InputMask from 'comigo-tech-react-input-mask';\nimport RingLoader from 'react-spinners/RingLoader';\n\nexport const Form = styled.form`\n  max-width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n  padding: 20px;\n  background-color: ${props => props.theme.bgColor};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: ${props => props.theme.mainTextFontWeight};\n  color: ${props => props.theme.textColor};\n  text-align: center;\n  & + & {\n    margin-top: 10px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Input = styled(InputMask)`\n  display: block;\n  margin-top: 5px;\n  width: 100%;\n  height: 30px;\n  padding: 5px;\n  font-size: 15px;\n  font-weight: 500;\n  border: solid 1px;\n  border-radius: 5px;\n  color: #a7a3a3a9;\n  border-color: ${props => props.theme.bgElementColor};\n  background-color: ${props => props.theme.bgColor};\n  transition: border-color ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n  transition: color 1000ms ${props => props.theme.hoverTimeFunction};\n  &:hover,\n  &:focus {\n    border-color: ${props => props.theme.bgElementHoverColor};\n    color: inherit;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  padding: 10px;\n  margin-right: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  color: ${props => props.theme.elementColor};\n  background-color: ${props => props.theme.bgElementColor};\n  transition: background-color ${props => props.theme.hoverTransition}\n    ${props => props.theme.hoverTimeFunction};\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.bgElementHoverColor};\n  }\n`;\n\nexport const Loader = styled(RingLoader)`\n  margin-left: 5px;\n`;\n","import styled from 'styled-components';\nimport {\n  InfoForm,\n  InfoLabel,\n  InfoInput,\n  InfoButton,\n} from '../../components/ContactEdit/ContactEdit.styled';\n\nexport const Wrap = styled.div`\n  padding: 30px 0;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  text-transform: uppercase;\n  font-size: 24px;\n`;\n\nexport const Container = styled.div`\n  width: 60vw;\n  padding: 0 350px;\n`;\n\nexport const Form = styled(InfoForm)`\n  margin-bottom: 0;\n  width: 100%;\n  border: 2px solid ${({ theme }) => theme.bgElementColor};\n  border-radius: 5px;\n\n  & > button {\n    margin-top: 20px;\n  }\n`;\n\nexport const UserLabel = styled(InfoLabel)``;\n\nexport const UserInput = styled(InfoInput)`\n  margin-top: 10px;\n`;\n\nexport const UserButton = styled(InfoButton)`\n  margin-top: 20px;\n`;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { useUserLoginMutation } from 'redux/auth/auth';\nimport { toast } from 'react-toastify';\nimport {\n  Wrap,\n  Title,\n  Container,\n  Form,\n  UserLabel,\n  UserInput,\n  UserButton,\n} from './LoginPage.styled';\nimport { setCredentials } from 'redux/auth/auth-slice';\nimport { setLoggedIn } from 'redux/auth/logged-slice';\n\nconst LoginPage = () => {\n  const [userLogin, { status, data }] = useUserLoginMutation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userEmail = useSelector(({ auth }) => auth.user.email);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ criteriaMode: 'all' });\n\n  const onSubmit = formData => {\n    const fetchData = { ...formData };\n    userLogin(fetchData);\n  };\n\n  useEffect(() => {\n    if (status === 'fulfilled') {\n      dispatch(setCredentials(data));\n      dispatch(setLoggedIn(true));\n      console.log(data);\n      toast.success('Login is successfull');\n      navigate('/contacts', { replace: true });\n    }\n  }, [data, dispatch, navigate, status]);\n\n  return (\n    <Wrap>\n      <Title>Login form</Title>\n      <Container>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <UserLabel>\n            Email\n            <UserInput\n              defaultValue={userEmail}\n              {...register('email', {\n                required: 'Email is required.',\n                pattern: /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/,\n                maxLength: {\n                  value: 30,\n                  message: 'This input exceed maxLength.',\n                },\n              })}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"email\"\n              render={({ messages }) =>\n                messages &&\n                Object.entries(messages).map(([type, message]) => (\n                  <p key={type}>{message}</p>\n                ))\n              }\n            />\n          </UserLabel>\n          <UserLabel>\n            Password\n            <UserInput\n              type=\"password\"\n              {...register('password', {\n                required: 'Password is required.',\n                pattern: {\n                  value:\n                    /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/,\n                  message:\n                    'Your password should contain one number and one special character.',\n                },\n                maxLength: {\n                  value: 16,\n                  message: 'This input exceed maxLength.',\n                },\n                minLength: {\n                  value: 6,\n                  message: 'This input exceed maxLength.',\n                },\n              })}\n            />\n            <ErrorMessage\n              errors={errors}\n              name=\"password\"\n              render={({ messages }) =>\n                messages &&\n                Object.entries(messages).map(([type, message]) => (\n                  <p key={type}>{message}</p>\n                ))\n              }\n            />\n          </UserLabel>\n          {errors.exampleRequired && <span>This field is required</span>}\n          <UserButton type=\"submit\">Submit</UserButton>\n        </Form>\n      </Container>\n    </Wrap>\n  );\n};\n\nexport default LoginPage;\n"],"names":["InfoForm","styled","theme","bgColor","bgElementColor","InfoLabel","mainTextFontWeight","textColor","CloseIcon","IoMdClose","animationDuration","animationTimeFunction","InfoInput","Input","InfoButton","Button","Form","props","Label","InputMask","hoverTransition","hoverTimeFunction","bgElementHoverColor","elementColor","Loader","RingLoader","Wrap","Title","Container","UserLabel","UserInput","UserButton","useUserLoginMutation","userLogin","status","data","dispatch","useDispatch","navigate","useNavigate","userEmail","useSelector","auth","user","email","useForm","criteriaMode","register","handleSubmit","errors","formState","useEffect","setCredentials","setLoggedIn","console","log","toast","replace","onSubmit","formData","fetchData","defaultValue","required","pattern","maxLength","value","message","name","render","messages","Object","entries","map","type","minLength","exampleRequired"],"sourceRoot":""}