{"version":3,"file":"static/js/login-page.323eaa7a.chunk.js","mappings":"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","sources":["components/ContactEdit/ContactEdit.styled.jsx","components/ContactForm/ContactForm.styled.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Input, Button } from '../ContactForm/ContactForm.styled';\r\nimport { IoMdClose } from 'react-icons/io';\r\n\r\nexport const InfoForm = styled.form`\r\n  min-width: 350px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 10px;\r\n  padding: 20px;\r\n  background-color: ${({ theme }) => theme.bgColor};\r\n\r\n  & p {\r\n    color: ${({ theme }) => theme.bgElementColor};\r\n    font-size: 12px;\r\n  }\r\n\r\n  & p::before {\r\n    display: inline;\r\n    content: 'âš   ';\r\n  }\r\n\r\n  & > button {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const InfoLabel = styled.label`\r\n  display: block;\r\n  font-weight: ${({ theme }) => theme.mainTextFontWeight};\r\n  color: ${({ theme }) => theme.textColor};\r\n  text-align: center;\r\n\r\n  & + & {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const CloseIcon = styled(IoMdClose)`\r\n  width: 24px;\r\n  height: 24px;\r\n  color: ${({ theme }) => theme.textColor};\r\n  transition: color ${({ theme }) => theme.animationDuration}\r\n    ${({ theme }) => theme.animationTimeFunction};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${({ theme }) => theme.bgElementColor};\r\n  }\r\n`;\r\n\r\nexport const InfoInput = styled(Input)``;\r\nexport const InfoButton = styled(Button)``;\r\n","import styled from 'styled-components';\r\nimport InputMask from 'comigo-tech-react-input-mask';\r\nimport RingLoader from 'react-spinners/RingLoader';\r\n\r\nexport const Form = styled.form`\r\n  max-width: 300px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 10px;\r\n  padding: 20px;\r\n  background-color: ${props => props.theme.bgColor};\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  font-weight: ${props => props.theme.mainTextFontWeight};\r\n  color: ${props => props.theme.textColor};\r\n  text-align: center;\r\n  & + & {\r\n    margin-top: 10px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(InputMask)`\r\n  display: block;\r\n  margin-top: 5px;\r\n  width: 100%;\r\n  height: 30px;\r\n  padding: 5px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  border: solid 1px;\r\n  border-radius: 5px;\r\n  color: #a7a3a3a9;\r\n  border-color: ${props => props.theme.bgElementColor};\r\n  background-color: ${props => props.theme.bgColor};\r\n  transition: border-color ${props => props.theme.hoverTransition}\r\n    ${props => props.theme.hoverTimeFunction};\r\n  transition: color 1000ms ${props => props.theme.hoverTimeFunction};\r\n  &:hover,\r\n  &:focus {\r\n    border-color: ${props => props.theme.bgElementHoverColor};\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 120px;\r\n  padding: 10px;\r\n  margin-right: 5px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: ${props => props.theme.elementColor};\r\n  background-color: ${props => props.theme.bgElementColor};\r\n  transition: background-color ${props => props.theme.hoverTransition}\r\n    ${props => props.theme.hoverTimeFunction};\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${props => props.theme.bgElementHoverColor};\r\n  }\r\n`;\r\n\r\nexport const Loader = styled(RingLoader)`\r\n  margin-left: 5px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport {\r\n  InfoForm,\r\n  InfoLabel,\r\n  InfoInput,\r\n  InfoButton,\r\n} from '../../components/ContactEdit/ContactEdit.styled';\r\nimport { device } from 'deviceSizes';\r\n\r\nexport const Wrap = styled.div`\r\n  position: relative;\r\n  padding: 30px 0;\r\n`;\r\n\r\nexport const Notification = styled.div`\r\n  position: absolute;\r\n  padding: 10px;\r\n  background-color: #a54f4f;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  top: 10px;\r\n  right: 10px;\r\n  z-index: 2;\r\n\r\n  &.fade-enter {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n    transition: opacity ${({ theme }) => theme.animationDuration}\r\n      ${({ theme }) => theme.animationTimeFunction};\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n    transition: opacity ${({ theme }) => theme.animationDuration}\r\n      ${({ theme }) => theme.animationTimeFunction};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin-bottom: 20px;\r\n  text-transform: uppercase;\r\n  font-size: 24px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 400px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @media ${device.mobileM} {\r\n    width: 350px;\r\n  }\r\n`;\r\n\r\nexport const Form = styled(InfoForm)`\r\n  margin-bottom: 0;\r\n  width: 100%;\r\n  border: 2px solid ${({ theme }) => theme.bgElementColor};\r\n  border-radius: 5px;\r\n\r\n  & > button {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const UserLabel = styled(InfoLabel)``;\r\n\r\nexport const UserInput = styled(InfoInput)`\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const UserButton = styled(InfoButton)`\r\n  margin-top: 20px;\r\n`;\r\n","import { useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useUserLoginMutation } from 'redux/auth/auth';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { toast } from 'react-toastify';\r\nimport { light } from '../../themes';\r\nimport {\r\n  Wrap,\r\n  Title,\r\n  Container,\r\n  Form,\r\n  UserLabel,\r\n  UserInput,\r\n  UserButton,\r\n  Notification,\r\n} from './LoginPage.styled';\r\nimport { setCredentials } from 'redux/auth/auth-slice';\r\nimport { setLoggedIn } from 'redux/auth/logged-slice';\r\n\r\nconst LoginPage = () => {\r\n  const [userLogin, { status, data, isError }] = useUserLoginMutation();\r\n  const notifyRef = useRef(null);\r\n  const animationTimeOut = useRef(parseInt(light.animationDuration));\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const userEmail = useSelector(({ auth }) => auth.user.email);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ criteriaMode: 'all' });\r\n\r\n  const onSubmit = formData => {\r\n    const fetchData = { ...formData };\r\n    userLogin(fetchData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (status === 'fulfilled') {\r\n      dispatch(setCredentials(data));\r\n      dispatch(setLoggedIn(true));\r\n      console.log(data);\r\n      toast.success('Login is successfull');\r\n      navigate('/contacts', { replace: true });\r\n    }\r\n  }, [data, dispatch, navigate, status]);\r\n\r\n  console.log(status);\r\n\r\n  return (\r\n    <Wrap>\r\n      <CSSTransition\r\n        nodeRef={notifyRef}\r\n        in={isError}\r\n        timeout={animationTimeOut.current}\r\n        classNames=\"fade\"\r\n        unmountOnExit\r\n      >\r\n        <Notification>\r\n          <h3>Wrong email or password</h3>\r\n        </Notification>\r\n      </CSSTransition>\r\n      <Title>Login form</Title>\r\n      <Container>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <UserLabel>\r\n            Email\r\n            <UserInput\r\n              defaultValue={userEmail}\r\n              {...register('email', {\r\n                required: 'Email is required.',\r\n                pattern: /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/,\r\n                maxLength: {\r\n                  value: 30,\r\n                  message: 'This input exceed maxLength.',\r\n                },\r\n              })}\r\n            />\r\n            <ErrorMessage\r\n              errors={errors}\r\n              name=\"email\"\r\n              render={({ messages }) =>\r\n                messages &&\r\n                Object.entries(messages).map(([type, message]) => (\r\n                  <p key={type}>{message}</p>\r\n                ))\r\n              }\r\n            />\r\n          </UserLabel>\r\n          <UserLabel>\r\n            Password\r\n            <UserInput\r\n              type=\"password\"\r\n              {...register('password', {\r\n                required: 'Password is required.',\r\n                pattern: {\r\n                  value:\r\n                    /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/,\r\n                  message:\r\n                    'Your password should contain one number and one special character.',\r\n                },\r\n                maxLength: {\r\n                  value: 16,\r\n                  message: 'This input exceed maxLength.',\r\n                },\r\n                minLength: {\r\n                  value: 6,\r\n                  message: 'This input exceed maxLength.',\r\n                },\r\n              })}\r\n            />\r\n            <ErrorMessage\r\n              errors={errors}\r\n              name=\"password\"\r\n              render={({ messages }) =>\r\n                messages &&\r\n                Object.entries(messages).map(([type, message]) => (\r\n                  <p key={type}>{message}</p>\r\n                ))\r\n              }\r\n            />\r\n          </UserLabel>\r\n          {errors.exampleRequired && <span>This field is required</span>}\r\n          <UserButton type=\"submit\">Submit</UserButton>\r\n        </Form>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["InfoForm","styled","theme","bgColor","bgElementColor","InfoLabel","mainTextFontWeight","textColor","CloseIcon","IoMdClose","animationDuration","animationTimeFunction","InfoInput","Input","InfoButton","Button","Form","props","Label","InputMask","hoverTransition","hoverTimeFunction","bgElementHoverColor","elementColor","Loader","RingLoader","Wrap","Notification","Title","Container","device","UserLabel","UserInput","UserButton","useUserLoginMutation","userLogin","status","data","isError","notifyRef","useRef","animationTimeOut","parseInt","light","dispatch","useDispatch","navigate","useNavigate","userEmail","useSelector","auth","user","email","useForm","criteriaMode","register","handleSubmit","errors","formState","useEffect","setCredentials","setLoggedIn","console","log","toast","replace","CSSTransition","nodeRef","in","timeout","current","classNames","unmountOnExit","onSubmit","formData","fetchData","defaultValue","required","pattern","maxLength","value","message","name","render","messages","Object","entries","map","type","minLength","exampleRequired"],"sourceRoot":""}